name: Build and Publish
on:
  workflow_dispatch:
  push:
    tags:
      - v**

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs--${{ matrix.targetPlatform }}-${{ hashFiles('.lfs-assets-id') }}

      - name: Setup External Git LFS Credentials
        uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: ${{secrets.LFS_CREDENTIAL}}
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Download Icon
        run: |
          curl ${{ secrets.ICON_URL }} -o Icon.zip
          unzip Icon.zip -d Assets/Sprites
          rm Icon.zip
      # Cache
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: AdInfinitum
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
      # Output
      - name: Upload to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}